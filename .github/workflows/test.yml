name: Build and Test

permissions:
  contents: write
  pull-requests: write
  packages: read
  id-token: write # Required for OIDC authentication

on:
  workflow_dispatch:
  pull_request_target:
    types:
      - opened
      - reopened
      - synchronize
    
jobs:
  authorize:
    environment: ${{ github.event_name == 'pull_request_target' && github.event.pull_request.head.repo.full_name != github.repository && 'external' || 'internal' }}
    runs-on: ubuntu-latest
    steps:
      - run: true

  build-test:
    needs: authorize
    uses: liquibase/build-logic/.github/workflows/os-extension-test.yml@main
    secrets: inherit

  integration-tests:
    name: Integration Test - Java ${{ matrix.java }} MongoDB ${{ matrix.mongodb }}
    runs-on: ubuntu-latest

    strategy:
      matrix:
        java: [8, 11, 17]
        mongodb: [5, 6, 7, 8]
    services:
      mongodb:
        image: mongo:${{ matrix.mongodb }}
        ports:
          - 27017-27020:27017-27020

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          repository: ${{ github.event_name == 'pull_request_target' && github.event.pull_request.head.repo.full_name || github.repository }}
          ref: ${{ github.event_name == 'pull_request_target' && github.event.pull_request.head.sha || github.ref_name }}
          persist-credentials: ${{ github.event_name == 'pull_request_target' && 'false' || 'true' }}
        
      - name: Configure AWS credentials for vault access
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.LIQUIBASE_VAULT_OIDC_ROLE_ARN }}
          aws-region: us-east-1

      - name: Get secrets from vault
        id: vault-secrets
        uses: aws-actions/aws-secretsmanager-get-secrets@v2
        with:
          secret-ids: |
            ,/vault/liquibase
          parse-json-secrets: true

      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java }}
          distribution: "temurin"
          cache: "maven"

      # look for dependencies in maven
      - name: maven-settings-xml-action
        uses: whelk-io/maven-settings-xml-action@v22
        with:
          repositories: |
            [
              {
                "id": "liquibase",
                "url": "https://maven.pkg.github.com/liquibase/liquibase",
                "releases": {
                  "enabled": "false"
                },
                "snapshots": {
                  "enabled": "true",
                  "updatePolicy": "always"
                }
              },
              {
                "id": "liquibase-pro",
                "url": "https://maven.pkg.github.com/liquibase/liquibase-pro",
                "releases": {
                  "enabled": "false"
                },
                "snapshots": {
                  "enabled": "true",
                  "updatePolicy": "always"
                }
              }
            ]
          servers: |
            [
              {
                "id": "liquibase-pro",
                "username": "liquibot",
                "password": "${{ env.LIQUIBOT_PAT_GPM_ACCESS }}"
              },
              {
                "id": "liquibase",
                "username": "liquibot",
                "password": "${{ env.LIQUIBOT_PAT_GPM_ACCESS }}"
              }
            ]

      - name: Integration Test - Java ${{ matrix.java }}
        run: mvn -B clean test verify -Prun-its --file pom.xml

  harness-tests:
    name: Harness Tests - Java ${{ matrix.java }} MongoDB ${{ matrix.mongodb }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [11, 17]
        mongodb: [5, 6, 7, 8]

    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials for vault access
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.LIQUIBASE_VAULT_OIDC_ROLE_ARN }}
          aws-region: us-east-1

      - name: Get secrets from vault
        id: vault-secrets
        uses: aws-actions/aws-secretsmanager-get-secrets@v2
        with:
          secret-ids: |
            ,/vault/liquibase
          parse-json-secrets: true

      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java }}
          distribution: "temurin"
          cache: "maven"

      # look for dependencies in maven
      - name: maven-settings-xml-action
        uses: whelk-io/maven-settings-xml-action@v22
        with:
          repositories: |
            [
              {
                "id": "liquibase",
                "url": "https://maven.pkg.github.com/liquibase/liquibase",
                "releases": {
                  "enabled": "false"
                },
                "snapshots": {
                  "enabled": "true",
                  "updatePolicy": "always"
                }
              },
              {
                "id": "liquibase-pro",
                "url": "https://maven.pkg.github.com/liquibase/liquibase-pro",
                "releases": {
                  "enabled": "false"
                },
                "snapshots": {
                  "enabled": "true",
                  "updatePolicy": "always"
                }
              }
            ]
          servers: |
            [
              {
                "id": "liquibase-pro",
                "username": "liquibot",
                "password": "${{ env.LIQUIBOT_PAT_GPM_ACCESS }}"
              },
              {
                "id": "liquibase",
                "username": "liquibot",
                "password": "${{ env.LIQUIBOT_PAT_GPM_ACCESS }}"
              }
            ]

      - name: Build Cache
        uses: actions/cache@v4.2.4
        with:
          key: build-${{ github.run_number }}-${{ github.run_attempt }}
          path: |
            **/target/**
            ~/.m2/repository/org/liquibase/

      - name: Start Database
        run: |
          docker ps -a
          docker compose -f ./src/test/resources/docker/docker-compose.yml up -d mongo-${{ matrix.mongodb }}
          docker ps -a

      - name: Harness Foundational Test Suite Run on Docker - Java ${{ matrix.java }}
        run: mvn -Dtest="HarnessNoSqlCompatibility" -DdbName=mongodb clean package -DdbVersion=${{ matrix.mongodb }}

      - name: Stop Docker Databases
        if: always()
        run: docker compose -f ./src/test/resources/docker/docker-compose.yml down mongo-${{ matrix.mongodb }}

      - name: Archive Mongo Database Test Results
        uses: actions/upload-artifact@v4
        with:
          name: mongodb-test-results
          path: build/spock-reports

  publish-master-snapshot-to-gpm:
    name: Deploy to GitHub Package Registry
    runs-on: ubuntu-latest
    needs: build-test
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials for vault access
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.LIQUIBASE_VAULT_OIDC_ROLE_ARN }}
          aws-region: us-east-1

      - name: Get secrets from vault
        id: vault-secrets
        uses: aws-actions/aws-secretsmanager-get-secrets@v2
        with:
          secret-ids: |
            ,/vault/liquibase
          parse-json-secrets: true

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: "temurin"
          cache: "maven"

      - name: maven-settings-xml-action
        uses: whelk-io/maven-settings-xml-action@v22
        with:
          repositories: |
            [
              {
                "id": "liquibase",
                "url": "https://maven.pkg.github.com/liquibase/liquibase",
                "releases": {
                  "enabled": "true"
                },
                "snapshots": {
                  "enabled": "true",
                  "updatePolicy": "always"
                }
              },
              {
                "id": "liquibase-pro",
                "url": "https://maven.pkg.github.com/liquibase/liquibase-pro",
                "releases": {
                  "enabled": "true"
                },
                "snapshots": {
                  "enabled": "true",
                  "updatePolicy": "always"
                }
              }
            ]
          servers: |
            [
              {
                "id": "liquibase",
                "username": "liquibot",
                "password": "${{ env.LIQUIBOT_PAT_GPM_ACCESS }}"
              },
              {
                "id": "liquibase-pro",
                "username": "liquibot",
                "password": "${{ env.LIQUIBOT_PAT_GPM_ACCESS }}"
              }
            ]

      - name: Download liquibase-mongodb-artifacts
        uses: actions/download-artifact@v5
        with:
          name: liquibase-mongodb-artifacts
          path: ./artifacts

      - name: Verify liquibase-mongodb-artifacts
        run: |
          ls -la ./artifacts

      - name: Extract project version
        run: echo "VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV

      - name: Publish to GitHub Packages
        run: |
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          mvn deploy:deploy-file \
          -Dfile="./artifacts/liquibase-mongodb-${{ env.VERSION }}.jar" \
          -DgroupId=org.liquibase.ext \
          -DartifactId=liquibase-mongodb \
          -Dversion=master-SNAPSHOT \
          -Dpackaging=jar \
            -DrepositoryId=liquibase \
            -Durl=https://maven.pkg.github.com/${{ github.repository }} \
            -Dusername=liquibot \
            -Dpassword=${{ env.LIQUIBOT_PAT_GPM_ACCESS }}
